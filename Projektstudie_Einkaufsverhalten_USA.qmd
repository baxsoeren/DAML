---
title: "Einkaufsgewohnheiten in den USA"
title-block-banner: true
lang: de
author: Ole Kepa,<br>
        Fabian Elsner,<br>
        Sören Bax
format: 
  html: 
    theme: minty
    toc: true
    toc_float: true
    number-sections: true
    embed-resources: true
    code-fold: true
    code-summary: "Code anzeigen"
date: 2023-12-23
---

<style>
  hr.section-divider1 {
    border-top: 15px solid #0000FF; 
  }

  hr.section-divider2 {
    border-top: 10px solid #000; 
  }
</style>


<!-- 
  pdf: 
    toc: true
    number-sections: true
    
THEMES: https://quarto.org/docs/output-formats/html-themes.html -->

```{r, message=FALSE, include = FALSE}
library(tidyverse) 
library(tidymodels)
library(explore)
library(ggplot2)
library(usmap)
library(dplyr)
library(kableExtra)
library(coefplot)
library(broom)
library(rpart.plot)
library(parsnip)
library(rpart)
```

<!-- Farbcode Türkis: #80c4ac -->

# Gendererklärung
Aus Lesbarkeitsgründen wird in dieser Studienarbeit auf die verschiedene Ansprechweisen, sei es divers, männlich oder weiblich verzichtet. Alle Formulierungen sprechen gleichermaßen alle Geschlechter an.

# Aufgabe und Daten verstehen

In dieser Arbeit soll untersucht werden, wie das Kaufverhalten der Käufer in den USA ist. Anschließend sollen mehrere Modelle entwickelt werden, welche Beispielsweise voraussagen, ob `[...].`

Hierzu steht ein Dataset zu dem Kaufverhalten von Verbrauchern in den USA zur Verfügung, das unter <https://www.kaggle.com/datasets/zeesolver/consumer-behavior-and-shopping-habits-dataset/data> abgerufen werden kann.

Dieses Datenset beinhaltet insgesamt zwei CSV-Dateien, welche sich jedoch nur in einem Spaltennamen und nicht in den Daten unterscheiden. Die Spalte zur Zahlungsmethode heißt in der Datei "shopping_behavior_updated.csv" "Payment_Method" und in der Datei "shopping_trend.csv" "Preferred Payment_Method". Wir nutzen daher nur die CSV-Datei "shopping_behavior_updated.csv".

## Beschreibung der Datenquelle

Laden wir zuerst die Daten:

```{r, message=FALSE}
raw_shopping_behavior <- read_csv('./data/shopping_behavior_updated.csv')
```

Nun werfen wir einen kurzen Blick auf die Daten und das Spaltenformat:

```{r}
knitr::kable(head(raw_shopping_behavior), caption = "Das Spaltenformat des Datensatzes 'shopping_behavior'")
```

Jede Zeile steht für einen Einkauf. Die Spalten sind wie folgt definiert:

Variable                    |Typ    |Bedeutung
:---------------------------|:------|:------------------------------------
**Customer_ID**             |dbl    | Eindeutige Kunden Identifikationsnummer
**Age**                     |dbl    | Alter des Kundens
**Gender**                  |chr    | Geschlecht des Kundens
**Item_Purchased**          |chr    | Gekauftes Produkt
**Category**                |chr    | Kategorie des gekauften Produkts
**Purchase_Amount**         |dbl    | Bezahlter Preis
**Location**                |chr    | Ort des Kaufes
**Size**                    |chr    | Konfektionsgröße des gekauften Produkts
**Color**                   |chr    | Farbe des gekauften Produkts
**Season**                  |chr    | Jahreszeit, in welcher der Kauf getätigt wurde
**Review_Rating**           |dbl    | Kundenbewertungen zum Produkt
**Subscription_Status**     |chr    | Status des Abonnements
**Payment_Method**          |chr    | Zahlungsmethode
**Shipping_Type**           |chr    | Versandart
**Discount_Applied**        |chr    | Rabattcode genutzt?
**Promo_Code_Used**         |chr    | Werbecode genutzt?
**Previous_Purchases**      |dbl    | Anzahl vorheriger Käufe
**Payment_Method**          |chr    | Bevorzugte Zahlungsmethode
**Frequency_of_Purchases**  |chr    | Häufigkeit von Käufen



```{r}
describe_tbl(raw_shopping_behavior)
```

Im Datensatz gibt es **`r nrow(raw_shopping_behavior)`** Instazen (Beobachtungen) und **`r ncol(raw_shopping_behavior)`** Spalten. Die Daten sind bereits *tidy*, was bedeutet, dass jede Variable ihre eigene Spalte, jede Beobachtung seine eigene Zeile und jeder Wert seine eigene Zelle hat. Die Daten sind bereits *bereinigt*, was bedeutet, dass sie keine fehlenden Werte enthalten.

## Thesen

Wir möchten insbesondere folgende Thesen in dieser Arbeit untersuchen:
<div class="d-grid gap-2">

<button type="button" onclick="window.location.href='#these1'" class="btn btn-primary">**These 1: Die meisten Personen kaufen wöchentlich ein.**</button>
  
<button type="button" onclick="window.location.href='#these2'" class="btn btn-primary">**These 2: Die meisten Klamotten sind in den Farben Schwarz, Weiß oder Grau.**</button>

<button type="button" onclick="window.location.href='#these3'" class="btn btn-primary">**These 3: Die meisten Kunden zahlen Bar.**</button>

<button type="button" onclick="window.location.href='#these4'" class="btn btn-primary">**These 4: Die meisten Kunden nutzen keinen Rabattcode.**</button>

<button type="button" onclick="window.location.href='#these5'" class="btn btn-primary">**These 5: Männer kaufen weniger ein als Frauen.**</button>

<button type="button" onclick="window.location.href='#these6'" class="btn btn-primary">**These 6: Es werden mehr Winter als Sommerklamotten gekauft.**</button>

<button type="button" onclick="window.location.href='#these7'" class="btn btn-primary">**These 7: Die meisten Klamotten werden im Norden gekauft.**</button>

<button type="button" onclick="window.location.href='#these8'" class="btn btn-primary">**These 8: Die Kategorie "Klamotten" wird am meisten gekauft.**</button>

<button type="button" onclick="window.location.href='#these9'" class="btn btn-primary">**These 9: Es kaufen mehr Personen über 40 Jahre ein, als Personen unter 40 Jahren.**</button>
</div>

# Untersuchung der Daten

## Untersuchung auf Außreißer

Um die Daten auf außreiser zu untersuchen schauen wir uns zunächst eine Zusammenfassung der Daten an:

```{r}
summary(raw_shopping_behavior)
```

```{r}
raw_shopping_behavior %>% describe()
```

Die Customer_ID ist für Analysen nicht verwertbar. Wir können Sie im nächsten Schritt löschen. 

## Datenaufbereitung

Nun erstellen wir den finalen Datensatz, welcher die Basis für die weitere Analyse bildet. Zunächst löschen wir die Spalte "Customer_ID", da diese für Analysen nicht verwertbar ist:

```{r}
shopping_behavior <- raw_shopping_behavior |> select(-"Customer_ID")
```

**MUSS HIER WAS KONVERTIERT WERDEN?**

Season in numerisch umwandeln (1, 2, 3, 4)

Frequency_of_Purchases umwandeln in Zahl


**PREISGURPPEN BILDEN**

Werfen wir einen Blick auf das finale Datenset.

```{r}

knitr::kable(head(shopping_behavior), caption = "Das Spaltenformat des finalen Datensatzes")
```



# Untersuchung der Thesen

Im folgenden werden die Thesen mit den Methoden der emplorativen Datenanalyse untersucht.

## These 1:

<div id="these1">
  <h2>Die meisten Personen kaufen wöchentlich ein.</h2>
</div>

<div class="card text-white bg-primary mb-3" style="max-width: 90rem;">

  <div class="card-body">
  <p class="card-text">Es wird analysiert, wie oft Personen wöchentlich einkaufen, wobei der Fokus auf den verschiedenen Häufigkeiten liegt.</p>
```{r}


frequency_counts <- shopping_behavior %>%
  count(`Frequency_of_Purchases`) %>%
  arrange(`Frequency_of_Purchases`)

frequency_counts %>%
  kable() %>%
  kable_styling(
    full_width = FALSE,
    position = "center",
    font_size = 16,
    latex_options = c("striped", "hold_position")
  ) %>%
  column_spec(1, color = "white")
```

  <p class="card-text">Wir stellen diesse Daten im nächsten Schritt aufbereitet in einem Diagramm da</p>
```{r}
frequency_mapping <- c("Fortnightly" = 2, "Weekly" = 1, "Annually" = 3,
                        "Quarterly" = 4, "Bi-Weekly" = 5, "Monthly" = 6, "Every 3 Months" = 7)
frequency_colors <- c("Fortnightly" = "blue", "Weekly" = "green", "Annually" = "red",
                      "Quarterly" = "orange", "Bi-Weekly" = "purple", "Monthly" = "pink", "Every 3 Months" = "brown")

shopping_behavior$`Frequency_of_Purchases` <- factor(shopping_behavior$`Frequency_of_Purchases`, levels = names(frequency_mapping))

unique_values <- unique(shopping_behavior$`Frequency_of_Purchases`)


ggplot(shopping_behavior, aes(x = `Frequency_of_Purchases`, fill = `Frequency_of_Purchases`)) +
  geom_bar(stat = "count") +
  labs(title = "Häufigkeit der Einkaufshäufigkeit", x = "Einkaufshäufigkeit", y = "Anzahl der Einkäufe") +
  scale_fill_manual(values = frequency_colors) +
  theme_minimal()
```
  </div>
  </div>
## These 2:

<div id="these2">
  <h2>Die meisten Klamotten sind in den Farben Schwarz, Weiß oder Grau.</h2>
</div>

<div class="card text-white bg-primary mb-3" style="max-width: 90rem;">
  
  <div class="card-body">
  <p class="card-text">Zuerst schauen wir, welche Farben alle vorhanden sind.</p>

```{r}
rows <- nrow(shopping_behavior |> distinct(Color))
print(shopping_behavior |> distinct(Color), n = rows)
```

<p class="card-text">Wir sehen, dass es `r nrow(shopping_behavior |> distinct(Color))` Farben gibt. Nun schauen wir uns die Häufigkeit der Farben an:</p>

```{r}
rows <- nrow(shopping_behavior |> distinct(Color))
print(shopping_behavior |> count(Color) |> arrange(desc(n)) , n = rows)

```

<p class="card-text">Wir sehen, dass die Farben Schwarz, Weiß und Grau am häufigsten vorkommen. Nun schauen wir uns die Häufigkeit der Farben an, die nicht Schwarz, Weiß oder Grau sind:</p>

```{r}
rows <- nrow(shopping_behavior |> distinct(Color))
print(shopping_behavior |> filter(Color != "Black" & Color != "White" & Color != "Gray") |> count(Color) |> arrange(desc(n)) , n = rows)

```

<p class="card-text">Wir sehen, dass die Farben Schwarz, Grau und Weiß r Kumulierter_Anteil_Schwarz_Weiß_Grau = max(Cumulative_Percentage)` an der gesamten Farbauswahl einnehmen</p>

```{r}
result <- shopping_behavior %>%
  count(Color) %>%
  mutate(Percentage = n / sum(n) * 100) %>%
  filter(Color %in% c("Black", "Gray", "White")) %>%
  arrange(desc(Percentage)) %>%
  mutate(Cumulative_Percentage = cumsum(Percentage)) %>%
  summarize(
    Gesamtanteil = sum(Percentage),
    Anteil_Schwarz = sum(Percentage[Color == "Black"]),
    Anteil_Grau = sum(Percentage[Color == "Gray"]),
    Anteil_Weiß = sum(Percentage[Color == "White"]),
    Kumulierter = max(Cumulative_Percentage)
  )

print(result)
```

<p class="card-text">Dies zeigt uns, dass die These, dass die Farben Schwarz, Grau und Weiß am häufigsten gekauft werden, nicht stimmt. Zur verdeutlichung wird ein Balkendiagramm erstellt.</p>

```{r}
data <- shopping_behavior %>%
  count(Color)

color_palette <- c(
  "Gray" = "#808080",
  "Maroon" = "#800000",
  "Turquoise" = "#40E0D0",
  "White" = "#FFFFFF",
  "Charcoal" = "#36454F",
  "Silver" = "#C0C0C0",
  "Pink" = "#FFC0CB",
  "Purple" = "#800080",
  "Olive" = "#808000",
  "Gold" = "#FFD700",
  "Violet" = "#EE82EE",
  "Teal" = "#008080",
  "Lavender" = "#E6E6FA",
  "Black" = "#000000",
  "Green" = "#008000",
  "Peach" = "#FFDAB9",
  "Red" = "#FF0000",
  "Cyan" = "#00FFFF",
  "Brown" = "#A52A2A",
  "Beige" = "#F5F5DC",
  "Orange" = "#FFA500",
  "Indigo" = "#4B0082",
  "Yellow" = "#FFFF00",
  "Magenta" = "#FF00FF",
  "Blue" = "#0000FF"
)

ggplot(data, aes(x = Color, y = n, fill = Color)) +
  geom_bar(stat = "identity") +
  labs(title = "Häufigkeit der Farben", x = "Farbe", y = "Häufigkeit") +
  scale_fill_manual(values = color_palette) +
  theme_minimal() + 
  theme(axis.text.x = element_blank())



```
  </div>
  </div>
  
## These 3:

<div id="these3">
  <h2>Die meisten Kunden zahlen Bar.</h2>
</div>


<div class="card text-white bg-primary mb-3" style="max-width: 90rem;">
  
  <div class="card-body">
<p class="card-text">Wir betrachten die verscheidenen Bezahlarten</p>

```{r}
unique_payment_methods <- unique(shopping_behavior$`Payment_Method`)
cat("Zahlungsmethoden:", toString(unique_payment_methods), "\n")
```
<p class="card-text">Wir schauen uns an, wie viele Zahlungen Bar getätigt wurden</p>

```{r}
count_cash_payments <- sum(shopping_behavior$`Payment_Method` %in% c("Bar", "Cash"), na.rm = TRUE)
cat("Anzahl der Barzahlungen:", count_cash_payments, "\n")

```

<p class="card-text">Wir zeigen den prozentualen Anteil der Barzahlungen an allen Zahlungen</p>

```{r}
percentage_cash <- count_cash_payments / nrow(shopping_behavior) * 100
cat("Prozentsatz der Barzahlungen:", percentage_cash, "%\n")
```

<p class="card-text">Anzahl aller Zahlungen</p>

```{r}
total_payments <- nrow(raw_shopping_behavior)

cat("Alle Zahlungen :", total_payments)
```


<p class="card-text">Für eine gute Analyse der Werte, schauen wir uns alle Bezahlmethoden an</p>

```{r}
payment_data <- raw_shopping_behavior %>%
  group_by(`Payment_Method`) %>%
  summarise(TotalAmount = sum(`Purchase_Amount`)) %>%
  ungroup() %>%
  mutate(Percentage = TotalAmount / sum(TotalAmount) * 100)

payment_data %>%
  select(`Payment_Method`, Percentage)
```
  </div>
  </div>
## These 4:

<div id="these4">
  <h2>Die meisten Kunden nutzen keinen Rabattcode.</h2>
  
<p>In dieser These wird die Hypothese geprüft, dass die meisten Kunden keine Rabattcodes nutzen würden. Unter dem Begriff "Rabattcodes" sind hier sowohl übliche Rabattcodes aber ebenso Promo-Codes gemeint. Zunächst schauen wir uns an wie oft der Wert "yes" in der Spalte "Discount Applied" vorkommt:</p>
  
```{r}
shopping_behavior |> count(`Discount_Applied`)
```
<p>Die Analyse zeigt, dass bei 2223 Einkäufen kein Rabattcode genutzt wurde. Bei 1677 wurde hingegen ein Rabattcode genutzt.

Im zweiten Schritt schauen wir uns an wie oft der Wert "yes" in der Spalte "Promo Code Used" vorkommt:</p>

```{r}
shopping_behavior |> count(`Promo_Code_Used`)
```

<p>Das Ergebnis dieser Abfrage zeigt, dass bei 2223 Einkäufen kein Promo-Code verwendet wurde. Bei 1677 wurde hingegen ein Promo-Code verwendet.</p>
  
```{r}
colnames(shopping_behavior)[colnames(shopping_behavior) == "Discount Applied"] <- "yes"
colnames(shopping_behavior)[colnames(shopping_behavior) == "Discount Applied"] <- "no"

shopping_behavior$Combined_Discount <- paste(shopping_behavior$`Discount_Applied`, shopping_behavior$`Promo_Code_Used`)

ggplot(shopping_behavior, aes(x = Combined_Discount)) +
  geom_bar(stat = "count", fill = "steelblue") +
  labs(title = "Discount and Promo Code Usage",
      x = "Combined Status",
      y = "Count")
```
    
<p>Zusammenfassend lässt sich also sagen, dass die Hypothese, dass die meisten Kunden keinen Rabattcode nutzen würden, bestätigt werden kann. Insgesamt wurden bei 2223 Einkäufen kein Rabattcode genutzt. Bei 1677 wurde hingegen ein Rabattcode genutzt.</p>

</div>

## These 5:

<div id="these5">
  <h2>Männer kaufen weniger ein als Frauen.</h2>
</div>
<p>
  In dieser These wird die Hypothese geprüft, dass Männer weniger Produkte einkaufen als Frauen. 

  Hierzu analysieren wir zunächst wie häufig die Werte "male" und "femal" in der Spalte "Gender" vorkommt:</p>
  
```{r}
shopping_behavior |> filter(Gender != "male") |> count(Gender)
shopping_behavior |> filter(Gender != "female") |> count(Gender)
```
    
<p>Das Ergebnis der Auswertung ist, dass Personend des männlichen Geschlechtes 2652 Produkte kauften. Personen des weiblichen         Geschlechts hingegen kauften nur 1248 Produkte. Selbes Ergebnis kann visuell der folgenden Grafik entnommen werden:</p>
  
```{r}
shopping_behavior |> count(Gender) |> ggplot(aes(x = Gender, y = n)) + geom_col()
```
    
## These 6:

<div id="these6">
  <h2>Es werden mehr Winter als Sommerklamotten gekauft.</h2>
</div>
 <p>In dieser These wird die Hypothese geprüft, dass im Winter mehr Kleidung gekauft wird als im Sommer.

  Hierzu analysieren wir zunächst wie häufig der Wert "Winter" in der Spalte "Season" vorkommt:

```{r}
shopping_behavior |> filter(Season == "Winter") |> count(Season)
```
    
<p>
    Das Ergebnis der Analyse zeigt, dass `r nrow(shopping_behavior |> filter(Season == "Winter") |> count(Season))` Produkte im         Winter gekauft wurden. Nun schauen wir uns an wie häufig der Wert "Summer" in der Spalte "Season" vorkommt:
</p>

```{r}
shopping_behavior |> filter(Season == "Summer") |> count(Season)
```
    
<p>
Das Ergebnis der Analyse zeigt, dass `r nrow(shopping_behavior |> filter(Season == "Summer") |> count(Season))` Produkte im Sommer gekauft wurden.

Somit lässt sich die Hypothese belegen, dass im Winter mehr Kleidung gekauft wird als im Sommer, belegen. Im Winter werden `r nrow(shopping_behavior |> filter(Season == "Winter") |> count(Season))` Produkte gekauft. Im Sommer hingegen werden `r nrow(shopping_behavior |> filter(Season == "Summer") |> count(Season))` Produkte gekauft. (Vgl. Grafik)
</p>

```{r}
if (!requireNamespace("ggplot2", quietly = TRUE)) {
  install.packages("ggplot2")
}

library(ggplot2)

ggplot(shopping_behavior, aes(x = Season, fill = Season)) +
  geom_bar() +
  labs(title = "Histogramm der Jahreszeiten",
      x = "Jahreszeiten",
      y = "Anzahl") +
  scale_fill_manual(values = c("Summer" = "orange", "Winter" = "blue"))
```

## These 7:

<div id="these7">
  <h2>Die meisten Klamotten werden im Norden gekauft.</h2>
</div>


<div class="card text-white bg-primary mb-3" style="max-width: 90rem;">
  
  <div class="card-body">
  <p class="card-text">Zunächst schauen wir uns  einmal alle vorhandenen Orte an:</p>

```{r}
shopping_behavior |> distinct(Location)
```

<p class="card-text">Wir sehen, dass es `r nrow(shopping_behavior |> distinct(Location))` Orte gibt. Nun schauen wir uns die Häufigkeit der  einzelnen Orte an:</p>

```{r}
rows <- nrow(shopping_behavior |> distinct(Location))
print(shopping_behavior |> count(Location) |> arrange(desc(n)) , n = rows)
```

<p class="card-text">Nun erstellen wir eine Heatmap über die Häufigkeit der Orte:</p>

```{r}
# Werte aus der Tabelle shopping_behavior übernommen
df <- data.frame(
  state  = c("Montana", "California", "Idaho", "Illinois", "Alabama", "Minnesota", "Nebraska", "Nevada", "New York", "Delaware",
             "Maryland", "Vermont", "Louisiana", "North Dakota", "Missouri", "New Mexico", "West Virginia","Mississippi", "Arkansas", "Georgia",
             "Indiana", "Kentucky", "Connecticut", "North Carolina", "Maine", "Ohio", "Tennessee", "Texas", "Virginia", "South Carolina",
             "Colorado", "Oklahoma", "Wisconsin", "Oregon", "Pennsylvania", "Michigan", "Washington", "Alaska", "Massachusetts", "New Hampshire",
             "New Hampshire", "Utah", "Wyoming", "South Dakota", "Iowa", "Florida", "New Jersey", "Arizona", "Hawaii", "Kansas",
             "Rhode Island"),
  occurrence = c(96, 95, 93, 92, 89, 88, 87, 87, 87, 86,
                 86, 85, 84, 83, 81, 81, 81, 80, 79, 79,
                 79, 79, 78, 78, 77, 77, 77, 77, 77, 76,
                 75, 75, 75, 74, 74, 73, 73, 72, 72, 71,
                 71, 71, 71, 70, 69, 68, 67, 65, 65, 63,
                 63)
)

plot_usmap(data = df, values = "occurrence", color = "black", labels = TRUE) + 
  scale_fill_continuous(
    low = "white", high = "#80c4ac", name = "Häufigkeit", label = scales::comma
  ) + theme(legend.position = "right")
```
  </div>
  </div>

## These 8: 

<div id="these8">
    <h2>Die Kategorie "Klamotten" wird am meisten gekauft.</h2>
</div>




Zunächst schauen wir uns einmal alle vorhandenen Kategorien an:

```{r}
shopping_behavior |> distinct(Category)
```

Wir sehen, dass es 4 Kategorien gibt: Klamotten, Schuhe, Accessoires und Oberbekleidung Nun schauen wir uns die Häufigkeit der Kategorien an:

```{r}
shopping_behavior |> count(Category)

shopping_behavior |> count(Category) |> ggplot(aes(x = Category, y = n)) + geom_col()
```

Wir sehen, dass die Kategorie "Klamotten" mit 1737 Instanzen am häufigsten vorkommt.Danach folgt die Kategorie "Accessoires" mit 1240 Instanzen. Am seltensten kommen die Kategorien "Schuhe" mit 599 und "Oberbekleidung" mit 324 Instanzen vor.

## These 9: 

<div id="these9">
  <h2>Es kaufen mehr Personen über 40 Jahre ein, als Personen unter 40 Jahren.</h2>
</div>


```{r}
hist(shopping_behavior$Age)
```

Einkauf mit dem höchsten Alter:

```{r, message=FALSE}
shopping_behavior |> arrange(desc(Age)) |> head(1)
```

Einkauf mit dem niedrigsten Alter:

```{r, message=FALSE}
shopping_behavior |> arrange(Age) |> head(1)
```

Berechnen wir Mittelwert und Median.

```{r}
shopping_behavior |> summarise(mean(Age), median(Age))

mean_behavior <- as.double(mean(shopping_behavior$Age))
med_behavior <- as.integer(median(shopping_behavior$Age))
```

Der Mittelwert `r mean_behavior` ist nicht robust gegenüber Ausreißern, deswegen ist der deutlich höher als der Median mit dem Wert `r med_behavior`.

Die Spannweite des Alters ist:

```{r}
max(shopping_behavior$Age) - min(shopping_behavior$Age)
```

Nun erstellen wir einen Boxplot für das Alter:

```{r}
ggplot(shopping_behavior, aes(x = Age)) + 
  geom_boxplot() +
  coord_flip() +
  labs(
    x = "Alter",
    title = "Boxplot der Lebensjahre der Kunden", 
  ) +
  scale_y_discrete(labels = NULL, breaks = NULL)  +
  scale_x_continuous(
    labels = comma_format(big.mark = ".", 
                          decimal.mark = ","))
```


# Anwendung und Beurteilung von Machine-Learning-Modellen

## Modell 1 (Ole)

### Anwendung

Wir analysieren die Daten mit Hilfe von lineare Regression. Wir wollen vorhersagen, wie viele Einkäufe es in den einzelnen Altersgruppen geben wird. Dafür erstellen wir ein Modell.

<div class="card text-white bg-primary mb-3" style="max-width: 90rem;">
  
  <div class="card-body">
  <p class="card-text">Daten gruppieren und Zusammenzählen</p>
```{r}
# Daten gruppieren und die Anzahl der Einkäufe pro Altersgruppe zusammenzählen
purchase_count_by_age <- shopping_behavior %>%
  group_by(Age) %>%
  summarize(Total_Purchases = n())

print(purchase_count_by_age)
```


<p>Daten aufteilen und Modell erstellen</p>
```{r}

# Modell erstellen (lineare Regression)
linear_model <- lm(Total_Purchases ~ Age, data = purchase_count_by_age)

print(linear_model)

```

<p>Vorhersagen für Testdaten</p>
```{r}
# Vorhersagen für alle Altersgruppen im vorhandenen Datenbereich
age_range <- seq(min(purchase_count_by_age$Age), max(purchase_count_by_age$Age), length.out = 10)
predictions <- predict(linear_model, newdata = data.frame(Age = age_range), interval = "confidence")

# Spalten umbenennen und auf 2 Nachkommastellen runden
colnames(predictions) <- c("Vorhergesagte Einkäufe", "Unteres Konfidenzintervall", "Oberes Konfidenzintervall")
predictions <- round(predictions, 2)

# Tabelle anzeigen
print(predictions)
```

<p>Daten gruppieren und Vorhersagen zusammenzählen:</p>
```{r}
# Daten für den Plot vorbereiten und auf 2 nachkommastellen runden
plot_data <- data.frame(Age = age_range, Predicted_Purchases = predictions[, 1], 
                        Lower = predictions[, 2], Upper = predictions[, 3]) %>%
  mutate(Age = round(Age, 2), Predicted_Purchases = round(Predicted_Purchases, 2),
         Lower = round(Lower, 2), Upper = round(Upper, 2))



# Tabelle anzeigen
print(plot_data)
```


<p>Scatterplot mit Konfidenzintervall erstellen</p>
```{r}

# Scatterplot mit Konfidenzintervall erstellen
ggplot() +
  geom_point(data = purchase_count_by_age, aes(x = Age, y = Total_Purchases), color = "black", size = 3, alpha = 0.5) +
  geom_line(data = plot_data, aes(x = Age, y = Predicted_Purchases), color = "#80c4ac", linewidth = 1) +
  geom_ribbon(data = plot_data, aes(x = Age, ymin = Lower, ymax = Upper), fill = "#80c4ac", alpha = 0.4) +
  labs(
    title = "Vorhersage der Einkäufe nach Alter",
    x = "Alter",
    y = "Anzahl der Einkäufe"
  ) +
  theme_minimal()
```
  </div>
  </div>

### Bewertung

Es wurde ein lineares Regressionsmodell erstellt, um die Beziehung zwischen Alter und Gesamtanzahl der Einkäufe zu untersuchen. Die Vorhersagen für Testdaten wurden mit Konfidenzintervallen präsentiert. Danach wurde ein Scatterplot erstellt, der die tatsächlichen und vorhergesagten Einkaufszahlen mit Konfidenzintervallen für verschiedene Altersgruppen vergleicht.


## Modell 2 (Ole)

Vorhersage des Discount_Applied (Rabattcode genutzt) basierend auf dem Kaufbetrag (Purchase_Amount) und der vorherigen Anzahl von Käufen (Previous_Purchases).

<div class="card text-white bg-primary mb-3" style="max-width: 90rem;">
  
  <div class="card-body">
  <p class="card-text">Anwendung</p>

```{r}

shopping_behavior$Discount_Applied <- as.factor(shopping_behavior$Discount_Applied)

# Daten aufteilen
set.seed(123)
training_rows <- sample(1:nrow(shopping_behavior), 0.8 * nrow(shopping_behavior))
training_data <- shopping_behavior[training_rows, ]
test_data <- shopping_behavior[-training_rows, ]

# Modell erstellen (logistische Regression)
logistic_model <- glm(Discount_Applied ~ Purchase_Amount + Previous_Purchases, data = training_data, family = "binomial")

# Vorhersagen für Testdaten
predictions <- predict(logistic_model, newdata = test_data, type = "response")

# Vorhersagen in Tabelle zusammenfassen
prediction_table <- data.frame(Discount_Applied = test_data$Discount_Applied, Predicted_Probability = predictions)

# Tabelle ausgeben mit 10 ergebnissen und vermerken, dass es mehr gibt.
print(head(prediction_table, 10))


# visuelle Darstellung der Vorhersagen
ggplot(prediction_table, aes(x = Discount_Applied, y = Predicted_Probability)) +
  geom_boxplot() +
  labs(
    title = "Vorhersage der Wahrscheinlichkeit, dass ein Rabattcode genutzt wird",
    x = "Rabattcode genutzt",
    y = "Vorhergesagte Wahrscheinlichkeit"
  ) +
  theme_minimal()

```

<p>Kommulierte Ausgabe der Warscheinlichkeiten, dass ein Rabattcode genutzt wird oder nicht (als Wert zwischen 0 und 1).</p>

```{r}

cumulative_prediction_table <- prediction_table %>%
  group_by(Discount_Applied) %>%
  summarize(Distribution = mean(Predicted_Probability))


colnames(cumulative_prediction_table) <- c("Rabatt Angewandt", "Prognostizierte Wahrscheinlichkeit")


print(cumulative_prediction_table)
```

<p>SÖRN STINKT</p>

  </div>
  </div>

Bewertung der Vorhersagen



### Anwendung

### Beurteilung

## Modell 3 (Fabian)

### Anwendung

### Beurteilung

## Modell 4 (Fabian)

### Anwendung

### Beurteilung

## Modell 5 (Sörn) -- Entscheidungsbaum ob eine person abonennt ist oder nicht die knoten sind Gender und Age
```{r}

shopping_behavior$Subscription_Status <- as.factor(shopping_behavior$Subscription_Status)

# Daten aufteilen
set.seed(123)
training_rows <- sample(1:nrow(shopping_behavior), 0.8 * nrow(shopping_behavior))
training_data <- shopping_behavior[training_rows, ]
test_data <- shopping_behavior[-training_rows, ]

# Modell erstellen
tree_model <- rpart(Subscription_Status ~  Gender, data = training_data, method = "class")

# Vorhersagen für Testdaten
tree_predictions <- predict(tree_model, newdata = test_data, type = "class")

# Confusion Matrix
tree_cm <- table(test_data$Gender, tree_predictions)
print(tree_cm)

# Accuracy
tree_accuracy <- sum(diag(tree_cm)) / sum(tree_cm)
print(tree_accuracy)

# Plot des Entscheidungsbaums
rpart.plot(tree_model)
```

### Anwendung

### Beurteilung

## Modell 6 (Sörn)

```{r}
names(shopping_behavior)

sum(is.na(shopping_behavior))


# Neue Variable erstellen
shopping_behavior$Combined_Gender <- ifelse(shopping_behavior$Gender == "Male", "Male", "Female")

# Datentyp der Zielvariable ändern
shopping_behavior$Combined_Gender <- as.factor(shopping_behavior$Combined_Gender)

# Entscheidungsbaummodell erstellen
tree_mod <- decision_tree(mode = "classification")
tree_fit_1 <- tree_mod %>% 
  fit(Combined_Gender ~ Gender + Age, data = shopping_behavior)

# Zusammenfassung des erstellten Modells anzeigen
summary(tree_fit_1$fit)

# Entscheidungsbaum visualisieren
rpart.plot::rpart.plot(tree_fit_1$fit, extra = 102, fallen.leaves = FALSE)




```



### Anwendung

### Beurteilung

# Fazit

## Bewertung

Ich finde das sehr Kritisch und nicht schön

## Ideen für weitere Analysen

# Quellen

Datenset: <https://www.kaggle.com/datasets/zeesolver/consumer-behavior-and-shopping-habits-dataset/data> <br>
US-Map: <https://jtr13.github.io/cc19/different-ways-of-plotting-u-s-map-in-r.html> <br>
US-Map 2: <https://cran.r-project.org/web/packages/usmap/vignettes/mapping.html> <br>

# Ehrenwörtliche Erklärung
Hiermit erklären wir, dass wir die vorliegende Studienarbeit (Produktstudie) selbständig angefertigt haben und die Bearbeiter der einzelnen Abschnitte wahrheitsgemäß angegeben haben. Es wurden nur die in der Arbeit ausdrücklich benannten Quellen und Hilfsmittel benutzt. Wörtlich oder sinngemäß übernommenes Gedankengut haben wir als solches kenntlich gemacht. Diese Arbeit hat in gleicher oder ähnlicher Form ganz oder teilweise noch keiner Prüfungsbehörde vorgelegen.

<!-- Unterschriften in HTML -->
<img src="./signatures/OleKepa.png" height="50" width="150"> <img src="./signatures/FabianElsner.png" height="50" width="150"> <img src="./signatures/SoerenBax.png" height="50" width="150">

<!-- Unterschriften in PDF einbinden -->
\includegraphics{"./signatures/OleKepa.png"} \includegraphics{"./signatures/OleKepa.png"} \includegraphics{"./signatures/OleKepa.png"}